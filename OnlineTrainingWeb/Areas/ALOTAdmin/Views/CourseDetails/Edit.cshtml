@model ViewModel.CourseDetailsViewModel
@{
    Layout = null;
}
@using (Html.BeginForm("Edit", "CourseDetails", FormMethod.Post, new { onsubmit = "return SubmitFormEdit(this)" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h5 class="text-primary">Do you want to update the <span class="chip chip blue lighten-4">@Model.MainTitle</span> </h5>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <div class="row offset-1">
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(model => model.MainTitle, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.MainTitle, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MainTitle, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label" })
                <div class="">
                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Language, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Language, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Language, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ProgramName, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.ProgramName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProgramName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.VideoLanguage, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.VideoLanguage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VideoLanguage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Trainer, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Trainer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Trainer, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Certification, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Certification, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Certification, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Level, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Availability, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.Availability, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Availability, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.SutdentFinished, htmlAttributes: new { @class = "control-label " })
                <div class="">
                    @Html.EditorFor(model => model.SutdentFinished, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SutdentFinished, "", new { @class = "text-danger" })

                </div>
            </div>

        </div>
    </div>
    <div class="row">
        <div class="offset-4">
            <div class="form-group">
                <button type="submit" value="Create" class="btn btn-primary btn-rounded btn-md"><i class="fas fa-save pr-2"></i> Save</button>  |
                <button type="reset" value="Reset" class="btn btn-mdb-color btn-rounded btn-md"><i class="fas fa-redo-alt"></i> Reset</button>

            </div>
        </div>
    </div>
</div>
}
